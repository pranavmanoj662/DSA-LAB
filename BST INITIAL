#include<stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node* left;
    struct Node* right;
    };
    
struct Node* createnode( int value){
    struct Node* newnode =(struct Node*) malloc(sizeof(struct Node));
    newnode->data=value;
    newnode->left=newnode->right= NULL;
    return newnode;
}
struct Node* insert(struct Node* root , int value)
{
    if (root==NULL){
       return createnode(value);
    }
    if (value<root->data){
        root->left=insert(root->left,value);
    }
    else if (value>root->data){
        root->right=insert(root->right,value);
    }
    return root;
}

// traversal
 void inorder(struct Node* root){
       if (root != NULL) {
     inorder(root->left);
     printf("%d",root->data);
     inorder(root->right);
 }}
 
 void preorder(struct Node* root){
       if (root != NULL) {
     printf("%d",root->data);
     preorder(root->left);
     preorder(root-> right);
 }}
 
 void postorder(struct Node* root){
       if (root != NULL) {
     postorder(root->left);
     postorder(root->right);
     printf("%d",root->data);
 }}
 
int main() {
    struct Node* root = NULL;
    int choice, value;
    
    do {
        printf("\nMenu:\n1. Insert\n2. Inorder\n3. Preorder\n4. Postorder\n5. Exit\nEnter your choice: ");
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                root = insert(root, value);
                break;
            case 2:
                printf("Inorder Traversal: ");
                inorder(root);
                printf("\n");
                break;
            case 3:
                printf("Preorder Traversal: ");
                preorder(root);
                printf("\n");
                break;
            case 4:
                printf("Postorder Traversal: ");
                postorder(root);
                printf("\n");
                break;
            case 5:
                printf("Exiting...");
                break;
            default:
                printf("Invalid choice!\n");
        }
        
    } while (choice != 5);
    
    return 0;
}
